class Solution {
    public long maxSum(List<Integer> nums, int m, int k) {
        Map<Integer, Integer> seen = new HashMap<>();
        long s = 0;
        long res = 0;
        for (int i = 0; i < k; i ++) {
            s += nums.get(i);
            seen.put(nums.get(i), seen.getOrDefault(nums.get(i), 0) + 1);
        }
        if (seen.size() >= m) {
            res = s;
        }
        for (int i = k; i < nums.size(); i ++) {
            s += nums.get(i);
            s -= nums.get(i - k);
            seen.put(nums.get(i), seen.getOrDefault(nums.get(i), 0) + 1);
            seen.put(nums.get(i - k), seen.getOrDefault(nums.get(i - k), 0) - 1);
            if (seen.get(nums.get(i - k)) == 0) {
                seen.remove(nums.get(i - k));
            }
            if (seen.size() >= m) {
                res = Math.max(res, s);
            }
        }
        return res;
    }
}